{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-ui-loader/lib/core/ngx-ui-loader.enums.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.contants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/core/coercion.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.constants.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.constants.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ballScaleMultiple","ballSpin","ballSpinClockwise","ballSpinClockwiseFadeRotating","ballSpinFadeRotating","chasingDots","circle","cubeGrid","doubleBounce","fadingCircle","foldingCube","pulse","rectangleBounce","rectangleBounceParty","rectangleBouncePulseOut","rectangleBouncePulseOutRapid","rotatingPlane","squareJellyBox","squareLoader","threeBounce","threeStrings","wanderingCubes","bottomCenter","bottomLeft","bottomRight","centerCenter","centerLeft","centerRight","topCenter","topLeft","topRight","leftToRight","rightToLeft","DEFAULT_TASK_ID","SPINNER_CONFIG","ball-scale-multiple","divs","class","ball-spin","ball-spin-clockwise","ball-spin-clockwise-fade-rotating","ball-spin-fade-rotating","chasing-dots","cube-grid","double-bounce","fading-circle","folding-cube","rectangle-bounce","rectangle-bounce-party","rectangle-bounce-pulse-out","rectangle-bounce-pulse-out-rapid","rotating-plane","square-jelly-box","square-loader","three-bounce","three-strings","wandering-cubes","DEFAULT_CONFIG","bgsColor","bgsOpacity","bgsPosition","POSITION","bgsSize","bgsType","SPINNER","blur","fgsColor","fgsPosition","fgsSize","fgsType","gap","logoPosition","logoSize","logoUrl","masterLoaderId","overlayBorderRadius","overlayColor","pbColor","pbDirection","PB_DIRECTION","pbThickness","hasProgressBar","text","textColor","textPosition","threshold","NGX_UI_LOADER_CONFIG_TOKEN","InjectionToken","NgxUiLoaderService","config","defaultConfig","loaders","showForeground","BehaviorSubject","loaderId","isShow","showForeground$","asObservable","showBackground","showBackground$","fgClosing","foregroundClosing$","bgClosing","backgroundClosing$","initLoaderData","isMaster","throwErrorIfMasterLoaderExists","throwErrorIfLoaderExists","isBound","hasForeground","next","hasBackground","createLoaderData","updateLoaderId","newLoaderId","throwErrorIfLoaderNotExist","background","foreground","console","warn","destroyLoaderData","stopLoaderAll","getDefaultConfig","getLoaders","JSON","parse","stringify","getLoader","throwErrorIfMasterLoaderNotExist","getStatus","waitingBackground","waitingForeground","taskId","keys","startLoader","undefined","foregroundRunning","Date","now","backgroundCloseout","start","startBackgroundLoader","startBackground","stopLoader","_this","setTimeout","foregroundCloseout","stop","stopBackgroundLoader","stopBackground","stopAll","Error","useIsBoundProp","Injectable","args","providedIn","Optional","type","Inject","coerceNumber","value","fallbackValue","isNaN","parseFloat","Number","NgxUiLoaderComponent","domSanitizer","ngxService","initialized","ngOnInit","initializeSpinners","determinePositions","validate","trustedLogoUrl","bypassSecurityTrustResourceUrl","showForegroundWatcher","pipe","filter","showEvent","subscribe","data","showBackgroundWatcher","foregroundClosingWatcher","foregroundClosing","backgroundClosingWatcher","backgroundClosing","ngOnChanges","changes","bgsTypeChange","bgsPositionChange","fgsTypeChange","loaderIdChange","logoUrlChange","pbDirectionChange","previousValue","fgDivs","Array","fill","fgSpinnerClass","bgDivs","bgSpinnerClass","logoTop","spinnerTop","textTop","startsWith","bypassSecurityTrustStyle","inputName","validTypeObj","map","k","findIndex","v","error","ngOnDestroy","unsubscribe","Component","selector","template","DomSanitizer","Input","NgxUiLoaderBlurredDirective","elementRef","renderer","ngxUiLoaderService","blurNumber","defineProperty","filterValue","setStyle","nativeElement","Directive","ElementRef","Renderer2","NgxUiLoaderModule","forRoot","ngxUiLoaderConfig","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports","NGX_UI_LOADER_ROUTER_CONFIG_TOKEN","ROUTER_LOADER_ID","NgxUiLoaderRouterModule","parentModule","router","events","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","routerConfig","decorators","SkipSelf","Router","NGX_UI_LOADER_HTTP_CONFIG_TOKEN","HTTP_LOADER_ID","NgxUiLoaderHttpInterceptor","count","exclude","url","toLowerCase","excludeRegexp","regexp","RegExp","intercept","req","isIgnored","handle","finalize","str","test","NgxUiLoaderHttpModule","httpConfig","HTTP_INTERCEPTORS","useClass","multi"],"mappings":"8nBA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,eCjC9BQ,kBAAoB,sBACpBC,SAAW,YACXC,kBAAoB,sBACpBC,8BAAgC,oCAChCC,qBAAuB,0BACvBC,YAAc,eACdC,OAAS,SACTC,SAAW,YACXC,aAAe,gBACfC,aAAe,gBACfC,YAAc,eACdC,MAAQ,QACRC,gBAAkB,mBAClBC,qBAAuB,yBACvBC,wBAA0B,6BAC1BC,6BAA+B,mCAC/BC,cAAgB,iBAChBC,eAAiB,mBACjBC,aAAe,gBACfC,YAAc,eACdC,aAAe,gBACfC,eAAiB,sBAOjBC,aAAe,gBACfC,WAAa,cACbC,YAAc,eACdC,aAAe,gBACfC,WAAa,cACbC,YAAc,eACdC,UAAY,aACZC,QAAU,WACVC,SAAW,gBAOXC,YAAc,MACdC,YAAc,OC1CHC,EAAkB,UAclBC,EAAiB,CAC5BC,sBAAuB,CACrBC,KAAM,EACNC,QAAO,0BAETC,YAAa,CACXF,KAAM,EACNC,QAAO,gBAETE,sBAAuB,CACrBH,KAAM,EACNC,QAAO,0BAETG,oCAAqC,CACnCJ,KAAM,EACNC,QAAO,wCAETI,0BAA2B,CACzBL,KAAM,EACNC,QAAO,8BAETK,eAAgB,CACdN,KAAM,EACNC,QAAO,mBAET/B,OAAU,CACR8B,KAAM,GACNC,QAAO,aAETM,YAAa,CACXP,KAAM,EACNC,QAAO,gBAETO,gBAAiB,CACfR,KAAM,EACNC,QAAO,oBAETQ,gBAAiB,CACfT,KAAM,GACNC,QAAO,oBAETS,eAAgB,CACdV,KAAM,EACNC,QAAO,mBAET1B,MAAU,CACRyB,KAAM,EACNC,QAAO,YAETU,mBAAoB,CAClBX,KAAM,EACNC,QAAO,uBAETW,yBAA0B,CACxBZ,KAAM,EACNC,QAAO,6BAETY,6BAA8B,CAC5Bb,KAAM,EACNC,QAAO,iCAETa,mCAAoC,CAClCd,KAAM,EACNC,QAAO,uCAETc,iBAAkB,CAChBf,KAAM,EACNC,QAAO,qBAETe,mBAAoB,CAClBhB,KAAM,EACNC,QAAO,uBAETgB,gBAAiB,CACfjB,KAAM,EACNC,QAAO,oBAETiB,eAAgB,CACdlB,KAAM,EACNC,QAAO,mBAETkB,gBAAiB,CACfnB,KAAM,EACNC,QAAO,oBAETmB,kBAAmB,CACjBpB,KAAM,EACNC,QAAO,uBAOEoB,EAAoC,CAC/CC,SAAU,UACVC,WAAY,GACZC,YAAaC,EAASrC,YACtBsC,QAAS,GACTC,QAASC,EAAQ9D,kBACjB+D,KAAM,EACNC,SAAU,UACVC,YAAaN,EAASpC,aACtB2C,QAAS,GACTC,QAASL,EAAQ9D,kBACjBoE,IAAK,GACLC,aAAcV,EAASpC,aACvB+C,SAAU,IACVC,QAAS,GACTC,eAtHsC,SAuHtCC,oBAAqB,IACrBC,aAAc,wBACdC,QAAS,UACTC,YAAaC,EAAahD,YAC1BiD,YAAa,EACbC,gBAAgB,EAChBC,KAAM,GACNC,UAAW,UACXC,aAAcvB,EAASpC,aACvB4D,UAAW,KCrIAC,EAA6B,IAAIC,EAAAA,eAAkC,yCC6C9E,SAAAC,EAAoEC,GAAA1F,KAAA0F,OAAAA,EAElE1F,KAAK2F,cAAazG,EAAA,GAAQwE,GAEtB1D,KAAK0F,SACH1F,KAAK0F,OAAOJ,WAAatF,KAAK0F,OAAOJ,WAAa,IACpDtF,KAAK0F,OAAOJ,UAAY5B,EAAe4B,WAEzCtF,KAAK2F,cAAazG,EAAA,GAAQc,KAAK2F,cAAkB3F,KAAK0F,SAGxD1F,KAAK4F,QAAU,GACf5F,KAAK6F,eAAiB,IAAIC,EAAAA,gBAA2B,CAAEC,SAAU,GAAIC,QAAQ,IAC7EhG,KAAKiG,gBAAkBjG,KAAK6F,eAAeK,eAC3ClG,KAAKmG,eAAiB,IAAIL,EAAAA,gBAA2B,CAAEC,SAAU,GAAIC,QAAQ,IAC7EhG,KAAKoG,gBAAkBpG,KAAKmG,eAAeD,eAC3ClG,KAAKqG,UAAY,IAAIP,EAAAA,gBAA2B,CAAEC,SAAU,GAAIC,QAAQ,IACxEhG,KAAKsG,mBAAqBtG,KAAKqG,UAAUH,eACzClG,KAAKuG,UAAY,IAAIT,EAAAA,gBAA2B,CAAEC,SAAU,GAAIC,QAAQ,IACxEhG,KAAKwG,mBAAqBxG,KAAKuG,UAAUL,sBAO3CT,EAAA7F,UAAA6G,eAAA,SAAeV,OACTW,GAAW,EACXX,IAAa/F,KAAK2F,cAAchB,gBAClC3E,KAAK2G,gCAA+B,GACpCD,GAAW,GAEX1G,KAAK4G,yBAAyBb,GAAU,GAEtC/F,KAAK4F,QAAQG,IACf/F,KAAK4F,QAAQG,GAAUc,SAAU,EACjC7G,KAAK4F,QAAQG,GAAUW,SAAWA,EAE9B1G,KAAK8G,cAAcf,GACrB/F,KAAK6F,eAAekB,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,IAEzChG,KAAKgH,cAAcjB,IACrB/F,KAAKmG,eAAeY,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KAIjDhG,KAAKiH,iBAAiBlB,EAAUW,GAAU,IAQ9CjB,EAAA7F,UAAAsH,eAAA,SAAenB,EAAkBoB,GAC/BnH,KAAKoH,2BAA2BrB,GAC5B/F,KAAK4F,QAAQG,GAAUA,WAAa/F,KAAK2F,cAAchB,eAMvDwC,IAAgBpB,IAClB/F,KAAK4G,yBAAyBO,GAAa,GAC3CnH,KAAK4F,QAAQuB,GAAe,CAC1BpB,SAAUoB,EACVE,WAAUnI,EAAA,GAAOc,KAAK4F,QAAQG,GAAUsB,YACxCC,WAAUpI,EAAA,GAAOc,KAAK4F,QAAQG,GAAUuB,YACxCZ,UAAU,EACVG,QAAS7G,KAAK4F,QAAQG,GAAUc,gBAE3B7G,KAAK4F,QAAQG,IAdpBwB,QAAQC,KAAK,iGACcxH,KAAK2F,cAAchB,eAAc,uFAqBhEc,EAAA7F,UAAA6H,kBAAA,SAAkB1B,GAChB/F,KAAK0H,cAAc3B,UACZ/F,KAAK4F,QAAQG,IAOtBN,EAAA7F,UAAA+H,iBAAA,WACE,OAAAzI,EAAA,GAAYc,KAAK2F,gBAMnBF,EAAA7F,UAAAgI,WAAA,WACE,OAAOC,KAAKC,MAAMD,KAAKE,UAAU/H,KAAK4F,WAMxCH,EAAA7F,UAAAoI,UAAA,SAAUjC,GAOR,OANIA,EACF/F,KAAKoH,2BAA2BrB,IAEhC/F,KAAKiI,mCACLlC,EAAW/F,KAAK2F,cAAchB,gBAEzBkD,KAAKC,MAAMD,KAAKE,UAAU/H,KAAK4F,QAAQG,MAOhDN,EAAA7F,UAAAsI,UAAA,WAEE,OADAlI,KAAKiI,mCACE,CACLE,kBAAmBnI,KAAK4F,QAAQ5F,KAAK2F,cAAchB,gBAAgB0C,WACnEe,kBAAmBpI,KAAK4F,QAAQ5F,KAAK2F,cAAchB,gBAAgB2C,aAWvE7B,EAAA7F,UAAAkH,cAAA,SAAcf,EAAkBsC,GAC9B,QAAIrI,KAAK4F,QAAQG,KACXsC,IACKrI,KAAK4F,QAAQG,GAAUuB,WAAWe,GAEoB,EAAxDlJ,OAAOmJ,KAAKtI,KAAK4F,QAAQG,GAAUuB,YAAY5H,SAY1D+F,EAAA7F,UAAAoH,cAAA,SAAcjB,EAAkBsC,GAC9B,QAAIrI,KAAK4F,QAAQG,KACXsC,IACKrI,KAAK4F,QAAQG,GAAUsB,WAAWgB,GAEoB,EAAxDlJ,OAAOmJ,KAAKtI,KAAK4F,QAAQG,GAAUsB,YAAY3H,SAW1D+F,EAAA7F,UAAA2I,YAAA,SAAYxC,EAAkBsC,QAAA,IAAAA,IAAAA,EAAAnG,GAC5BlC,KAAKiH,iBAAiBlB,EAAUyC,WAAW,OAErCC,EAAoBzI,KAAK8G,cAAcf,GAC7C/F,KAAK4F,QAAQG,GAAUuB,WAAWe,GAAUK,KAAKC,MAE5C3I,KAAK4F,QAAQG,GAAUc,UAIvB4B,IACCzI,KAAKgH,cAAcjB,KACrB/F,KAAK4I,mBAAmB7C,GACxB/F,KAAKmG,eAAeY,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KAE/ChG,KAAK6F,eAAekB,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,OAUjDP,EAAA7F,UAAAiJ,MAAA,SAAMR,QAAA,IAAAA,IAAAA,EAAAnG,GACJlC,KAAKuI,YAAYvI,KAAK2F,cAAchB,eAAgB0D,IAStD5C,EAAA7F,UAAAkJ,sBAAA,SAAsB/C,EAAkBsC,QAAA,IAAAA,IAAAA,EAAAnG,GACtClC,KAAKiH,iBAAiBlB,EAAUyC,WAAW,GAE3CxI,KAAK4F,QAAQG,GAAUsB,WAAWgB,GAAUK,KAAKC,MAE5C3I,KAAK4F,QAAQG,GAAUc,UAIvB7G,KAAK8G,cAAcf,IACtB/F,KAAKmG,eAAeY,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,MAUjDP,EAAA7F,UAAAmJ,gBAAA,SAAgBV,QAAA,IAAAA,IAAAA,EAAAnG,GACdlC,KAAK8I,sBAAsB9I,KAAK2F,cAAchB,eAAgB0D,IAShE5C,EAAA7F,UAAAoJ,WAAA,SAAWjD,EAAkBsC,GAA7B,IAAAY,EAAAjJ,UAA6B,IAAAqI,IAAAA,EAAAnG,GAC3BlC,KAAKoH,2BAA2BrB,OAG1B4C,EAAMD,KAAKC,MACb3I,KAAK8G,cAAcf,EAAUsC,KAC3BrI,KAAK4F,QAAQG,GAAUuB,WAAWe,GAAUrI,KAAK2F,cAAcL,UAAYqD,EAC7EO,WAAW,WACTD,EAAKD,WAAWjD,EAAUsC,IACzBrI,KAAK4F,QAAQG,GAAUuB,WAAWe,GAAUrI,KAAK2F,cAAcL,UAAYqD,WAGzE3I,KAAK4F,QAAQG,GAAUuB,WAAWe,GAOtCrI,KAAK8G,cAAcf,KACtB/F,KAAKmJ,mBAAmBpD,GACxB/F,KAAK6F,eAAekB,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,IACzChG,KAAKgH,cAAcjB,IACrBmD,WAAW,WACLD,EAAKjC,cAAcjB,IACrBkD,EAAK9C,eAAeY,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KFlSZ,SE+S3CP,EAAA7F,UAAAwJ,KAAA,SAAKf,QAAA,IAAAA,IAAAA,EAAAnG,GACHlC,KAAKgJ,WAAWhJ,KAAK2F,cAAchB,eAAgB0D,IASrD5C,EAAA7F,UAAAyJ,qBAAA,SAAqBtD,EAAkBsC,GAAvC,IAAAY,EAAAjJ,UAAuC,IAAAqI,IAAAA,EAAAnG,GACrClC,KAAKoH,2BAA2BrB,OAG1B4C,EAAMD,KAAKC,MACb3I,KAAKgH,cAAcjB,EAAUsC,KAC3BrI,KAAK4F,QAAQG,GAAUsB,WAAWgB,GAAUrI,KAAK2F,cAAcL,UAAYqD,EAC7EO,WAAW,WACTD,EAAKI,qBAAqBtD,EAAUsC,IACnCrI,KAAK4F,QAAQG,GAAUsB,WAAWgB,GAAUrI,KAAK2F,cAAcL,UAAYqD,WAGzE3I,KAAK4F,QAAQG,GAAUsB,WAAWgB,GAOtCrI,KAAK8G,cAAcf,IAAc/F,KAAKgH,cAAcjB,KACvD/F,KAAK4I,mBAAmB7C,GACxB/F,KAAKmG,eAAeY,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,QAUjDP,EAAA7F,UAAA0J,eAAA,SAAejB,QAAA,IAAAA,IAAAA,EAAAnG,GACblC,KAAKqJ,qBAAqBrJ,KAAK2F,cAAchB,eAAgB0D,IAO/D5C,EAAA7F,UAAA8H,cAAA,SAAc3B,GACZ/F,KAAKoH,2BAA2BrB,GAE5B/F,KAAK8G,cAAcf,IACrB/F,KAAKmJ,mBAAmBpD,GACxB/F,KAAK6F,eAAekB,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KACpChG,KAAKgH,cAAcjB,KAC5B/F,KAAK4I,mBAAmB7C,GACxB/F,KAAKmG,eAAeY,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KAE/ChG,KAAK4F,QAAQG,GAAUuB,WAAa,GACpCtH,KAAK4F,QAAQG,GAAUsB,WAAa,IAMtC5B,EAAA7F,UAAA2J,QAAA,WACEvJ,KAAK0H,cAAc1H,KAAK2F,cAAchB,iBAUhCc,EAAA7F,UAAAqH,iBAAR,SAAyBlB,EAAkBW,EAAmBG,GACvD7G,KAAK4F,QAAQG,KAChB/F,KAAK4F,QAAQG,GAAY,CACvBA,SAAQA,EACRuB,WAAY,GACZD,WAAY,GACZX,SAAQA,EACRG,QAAOA,KASLpB,EAAA7F,UAAAwH,2BAAR,SAAmCrB,GACjC,IAAK/F,KAAK4F,QAAQG,GAChB,MAAM,IAAIyD,MAAM,+BAA+BzD,EAAQ,sBAQnDN,EAAA7F,UAAAgH,yBAAR,SAAiCb,EAAkB0D,GACjD,GAAIzJ,KAAK4F,QAAQG,IAAc/F,KAAK4F,QAAQG,GAAUc,SAAW4C,EAC/D,MAAM,IAAID,MAAM,+BAA+BzD,EAAQ,gDAQnDN,EAAA7F,UAAA+G,+BAAR,SAAuC8C,GACrC,GAAIzJ,KAAK4F,QAAQ5F,KAAK2F,cAAchB,iBAAoB3E,KAAK4F,QAAQ5F,KAAK2F,cAAchB,gBAAgBkC,SAAW4C,EACjH,MAAM,IAAID,MAAM,yJASZ/D,EAAA7F,UAAAqI,iCAAR,WACE,IAAKjI,KAAK4F,QAAQ5F,KAAK2F,cAAchB,gBACnC,MAAM,IAAI6E,MAAM,wDAQZ/D,EAAA7F,UAAAuJ,mBAAR,SAA2BpD,GAA3B,IAAAkD,EAAAjJ,KACEA,KAAKqG,UAAUU,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,IACxCkD,WAAW,WACTD,EAAK5C,UAAUU,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KF1blB,OEkclBP,EAAA7F,UAAAgJ,mBAAR,SAA2B7C,GAA3B,IAAAkD,EAAAjJ,KACEA,KAAKuG,UAAUQ,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,IACxCkD,WAAW,WACTD,EAAK1C,UAAUQ,KAAK,CAAEhB,SAAQA,EAAEC,QAAQ,KFrclB,2BEL3B0D,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,gFA0CCC,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMJ,KAAA,CAACpE,+HC9ClC,SAAgByE,EAAaC,EAAOC,GAClC,OAAQC,MAAMC,WAAU,KAAoBD,MAAME,OAAOJ,IAA0BC,EAAhBG,OAAOJ,GCN5E,IAAAK,EAAA,WAuEE,SAAAA,EACUC,EACAC,GADAxK,KAAAuK,aAAAA,EACAvK,KAAAwK,WAAAA,EAERxK,KAAKyK,aAAc,EACnBzK,KAAK2F,cAAgB3F,KAAKwK,WAAW7C,mBAErC3H,KAAK2D,SAAW3D,KAAK2F,cAAchC,SACnC3D,KAAK4D,WAAa5D,KAAK2F,cAAc/B,WACrC5D,KAAK6D,YAAc7D,KAAK2F,cAAc9B,YACtC7D,KAAK+D,QAAU/D,KAAK2F,cAAc5B,QAClC/D,KAAKgE,QAAUhE,KAAK2F,cAAc3B,QAClChE,KAAKmE,SAAWnE,KAAK2F,cAAcxB,SACnCnE,KAAKoE,YAAcpE,KAAK2F,cAAcvB,YACtCpE,KAAKqE,QAAUrE,KAAK2F,cAActB,QAClCrE,KAAKsE,QAAUtE,KAAK2F,cAAcrB,QAClCtE,KAAKuE,IAAMvE,KAAK2F,cAAcpB,IAC9BvE,KAAK+F,SAAW/F,KAAK2F,cAAchB,eACnC3E,KAAKwE,aAAexE,KAAK2F,cAAcnB,aACvCxE,KAAKyE,SAAWzE,KAAK2F,cAAclB,SACnCzE,KAAK0E,QAAU1E,KAAK2F,cAAcjB,QAClC1E,KAAK4E,oBAAsB5E,KAAK2F,cAAcf,oBAC9C5E,KAAK6E,aAAe7E,KAAK2F,cAAcd,aACvC7E,KAAK8E,QAAU9E,KAAK2F,cAAcb,QAClC9E,KAAK+E,YAAc/E,KAAK2F,cAAcZ,YACtC/E,KAAKiF,YAAcjF,KAAK2F,cAAcV,YACtCjF,KAAKkF,eAAiBlF,KAAK2F,cAAcT,eACzClF,KAAKmF,KAAOnF,KAAK2F,cAAcR,KAC/BnF,KAAKoF,UAAYpF,KAAK2F,cAAcP,UACpCpF,KAAKqF,aAAerF,KAAK2F,cAAcN,aA4L3C,OAtLEiF,EAAA1K,UAAA8K,SAAA,WAAA,IAAAzB,EAAAjJ,KACEA,KAAK2K,qBACL3K,KAAKwK,WAAW/D,eAAezG,KAAK+F,UACpC/F,KAAK4K,qBAEL5K,KAAK6D,YAA4B7D,KAAK6K,SAAS,cAAe7K,KAAK6D,YAAaC,EAAU9D,KAAK2F,cAAc9B,aAE7G7D,KAAK8K,eAAiB9K,KAAKuK,aAAaQ,+BAA+B/K,KAAK0E,SAE5E1E,KAAK+E,YAA6B/E,KAAK6K,SAAS,cAAe7K,KAAK+E,YAAaC,EAAchF,KAAK2F,cAAcZ,aAElH/E,KAAKgL,sBAAwBhL,KAAKwK,WAAWvE,gBAC1CgF,KAAKC,EAAAA,OAAO,SAACC,GAAyB,OAAAlC,EAAKlD,WAAaoF,EAAUpF,YAClEqF,UAAU,SAAAC,GACTpC,EAAKpD,eAAiBwF,EAAKrF,SAG/BhG,KAAKsL,sBAAwBtL,KAAKwK,WAAWpE,gBAC1C6E,KAAKC,EAAAA,OAAO,SAACC,GAAyB,OAAAlC,EAAKlD,WAAaoF,EAAUpF,YAClEqF,UAAU,SAAAC,GACTpC,EAAK9C,eAAiBkF,EAAKrF,SAG/BhG,KAAKuL,yBAA2BvL,KAAKwK,WAAWlE,mBAC7C2E,KAAKC,EAAAA,OAAO,SAACC,GAAyB,OAAAlC,EAAKlD,WAAaoF,EAAUpF,YAClEqF,UAAU,SAAAC,GACTpC,EAAKuC,kBAAoBH,EAAKrF,SAGlChG,KAAKyL,yBAA2BzL,KAAKwK,WAAWhE,mBAC7CyE,KAAKC,EAAAA,OAAO,SAACC,GAAyB,OAAAlC,EAAKlD,WAAaoF,EAAUpF,YAClEqF,UAAU,SAAAC,GACTpC,EAAKyC,kBAAoBL,EAAKrF,SAElChG,KAAKyK,aAAc,GAOrBH,EAAA1K,UAAA+L,YAAA,SAAYC,GACV,GAAK5L,KAAKyK,YAAV,KAIMoB,EAA8BD,EAAQ5H,QACtC8H,EAAkCF,EAAQ/H,YAC1CkI,EAA8BH,EAAQtH,QACtC0H,EAA+BJ,EAAQ7F,SACvCkG,EAA8BL,EAAQlH,QACtCwH,EAAkCN,EAAQ7G,aAE5CgH,GAAiBF,IACnB7L,KAAK2K,qBAGHqB,GACFhM,KAAKwK,WAAWtD,eAAe8E,EAAeG,cAAenM,KAAK+F,UAGpE/F,KAAK4K,qBAEDkB,IACF9L,KAAK6D,YAA4B7D,KAAK6K,SAAS,cAAe7K,KAAK6D,YAAaC,EAAU9D,KAAK2F,cAAc9B,cAG3GoI,IACFjM,KAAK8K,eAAiB9K,KAAKuK,aAAaQ,+BAA+B/K,KAAK0E,UAG1EwH,IACFlM,KAAK+E,YAA6B/E,KAAK6K,SAAS,cAAe7K,KAAK+E,YAAaC,EAAchF,KAAK2F,cAAcZ,gBAO9GuF,EAAA1K,UAAA+K,mBAAR,WACE3K,KAAKsE,QAAuBtE,KAAK6K,SAAS,UAAW7K,KAAKsE,QAASL,EAASjE,KAAK2F,cAAcrB,SAC/FtE,KAAKgE,QAAuBhE,KAAK6K,SAAS,UAAW7K,KAAKgE,QAASC,EAASjE,KAAK2F,cAAc3B,SAE/FhE,KAAKoM,OAASC,MAAMlK,EAAenC,KAAKsE,SAASjC,MAAMiK,KAAK,GAC5DtM,KAAKuM,eAAiBpK,EAAenC,KAAKsE,SAAShC,SACnDtC,KAAKwM,OAASH,MAAMlK,EAAenC,KAAKgE,SAAS3B,MAAMiK,KAAK,GAC5DtM,KAAKyM,eAAiBtK,EAAenC,KAAKgE,SAAS1B,UAM7CgI,EAAA1K,UAAAgL,mBAAR,WACE5K,KAAKoE,YAA4BpE,KAAK6K,SAAS,cAAe7K,KAAKoE,YAAaN,EAAU9D,KAAK2F,cAAcvB,aAC7GpE,KAAKwE,aAA6BxE,KAAK6K,SAAS,eAAgB7K,KAAKwE,aAAcV,EAAU9D,KAAK2F,cAAcnB,cAChHxE,KAAKqF,aAA6BrF,KAAK6K,SAAS,eAAgB7K,KAAKqF,aAAcvB,EAAU9D,KAAK2F,cAAcN,cAChHrF,KAAKuE,IAAMyF,EAAahK,KAAKuE,IAAKvE,KAAK2F,cAAcpB,KAErDvE,KAAK0M,QAAU,UACf1M,KAAK2M,WAAa,UAClB3M,KAAK4M,QAAU,UAGX5M,KAAKwE,aAAaqI,WAAW,UAC/B7M,KAAK0M,QAAU,MACN1M,KAAKwE,aAAaqI,WAAW,SACtC7M,KAAK0M,QAAU,QAGb1M,KAAKoE,YAAYyI,WAAW,UAC9B7M,KAAK2M,WAAa,MACT3M,KAAKoE,YAAYyI,WAAW,SACrC7M,KAAK2M,WAAa,QAGhB3M,KAAKqF,aAAawH,WAAW,UAC/B7M,KAAK4M,QAAU,MACN5M,KAAKqF,aAAawH,WAAW,SACtC7M,KAAK4M,QAAU,QAGb5M,KAAKoE,cAAgBN,EAASpC,aAC5B1B,KAAK0E,SAAW1E,KAAKwE,eAAiBV,EAASpC,aAC7C1B,KAAKmF,MAAQnF,KAAKqF,eAAiBvB,EAASpC,cAC9C1B,KAAK0M,QAAU1M,KAAKuK,aACjBuC,yBAAyB,cAAc9M,KAAKqE,QAAU,EAAC,eAA4BrE,KAAKuE,IAAG,OAC9FvE,KAAK2M,WAAa3M,KAAKuK,aACpBuC,yBAAyB,cAAc9M,KAAKyE,SAAW,EAAC,cAC3DzE,KAAK4M,QAAU5M,KAAKuK,aACjBuC,yBAAyB,cAAc9M,KAAKyE,SAAW,EAAC,QAAQzE,KAAKuE,IAAG,QAAQvE,KAAKqE,QAAU,EAAC,SAEnGrE,KAAK0M,QAAU1M,KAAKuK,aACjBuC,yBAAyB,cAAc9M,KAAKqE,QAAU,EAAC,QAAQrE,KAAKuE,IAAM,EAAC,OAC9EvE,KAAK2M,WAAa3M,KAAKuK,aACpBuC,yBAAyB,cAAc9M,KAAKyE,SAAW,EAAC,QAAQzE,KAAKuE,IAAM,EAAC,QAG7EvE,KAAKmF,MAAQnF,KAAKqF,eAAiBvB,EAASpC,eAC9C1B,KAAK2M,WAAa3M,KAAKuK,aACpBuC,yBAAyB,qBAAkC9M,KAAKuE,IAAM,EAAC,OAC1EvE,KAAK4M,QAAU5M,KAAKuK,aACjBuC,yBAAyB,cAAc9M,KAAKqE,QAAU,EAAC,QAAQrE,KAAKuE,IAAM,EAAC,QAI9EvE,KAAK0E,SAAW1E,KAAKwE,eAAiBV,EAASpC,cAC9C1B,KAAKmF,MAAQnF,KAAKqF,eAAiBvB,EAASpC,eAC/C1B,KAAK0M,QAAU1M,KAAKuK,aACjBuC,yBAAyB,qBAAkC9M,KAAKuE,IAAM,EAAC,OAC1EvE,KAAK4M,QAAU5M,KAAKuK,aACjBuC,yBAAyB,cAAc9M,KAAKyE,SAAW,EAAC,QAAQzE,KAAKuE,IAAM,EAAC,SAK7E+F,EAAA1K,UAAAiL,SAAR,SAAiBkC,EAAmB9C,EAAe+C,EAAkB9C,GACnE,OAAyF,IAArF/K,OAAOmJ,KAAK0E,GAAcC,IAAI,SAAAC,GAAK,OAAAF,EAAaE,KAAIC,UAAU,SAAAC,GAAK,OAAAA,IAAMnD,KAC3E1C,QAAQ8F,MAAM,qBAAqBN,EAAS,MAAM9C,EAAK,iCACjCC,EAAa,cAC5BA,GAEFD,GAMTK,EAAA1K,UAAA0N,YAAA,WACEtN,KAAKwK,WAAW/C,kBAAkBzH,KAAK+F,UACnC/F,KAAKgL,uBACPhL,KAAKgL,sBAAsBuC,cAEzBvN,KAAKsL,uBACPtL,KAAKsL,sBAAsBiC,cAEzBvN,KAAKuL,0BACPvL,KAAKuL,yBAAyBgC,cAE5BvN,KAAKyL,0BACPzL,KAAKyL,yBAAyB8B,mCAhRnCC,EAAAA,UAAS7D,KAAA,CAAC,CACT8D,SAAU,gBACVC,SAAA,yyxCAdOC,EAAAA,oBACAlI,uCAkBNmI,EAAAA,0BACAA,EAAAA,2BACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,2BACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,mBACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,mCACAA,EAAAA,4BACAA,EAAAA,uBACAA,EAAAA,2BACAA,EAAAA,2BACAA,EAAAA,8BACAA,EAAAA,oBACAA,EAAAA,yBACAA,EAAAA,4BACAA,EAAAA,SAsPHtD,EAhSA,GCAAuD,EAAA,WAyBE,SAAAA,EACUC,EACAC,EACAC,GAFAhO,KAAA8N,WAAAA,EACA9N,KAAA+N,SAAAA,EACA/N,KAAAgO,mBAAAA,EAERhO,KAAKiO,WAAajO,KAAKgO,mBAAmBrG,mBAAmBzD,KAC7DlE,KAAK+F,SAAW/F,KAAKgO,mBAAmBrG,mBAAmBhD,eAkC/D,OArDExF,OAAA+O,eACIL,EAAAjO,UAAA,OAAI,KADR,WAEE,OAAOI,KAAKiO,gBAGd,SAAShE,GACPjK,KAAKiO,WAAajE,EAAaC,EAAOjK,KAAKgO,mBAAmBrG,mBAAmBzD,uCAmBnF2J,EAAAjO,UAAA8K,SAAA,WAAA,IAAAzB,EAAAjJ,KACEA,KAAKgL,sBAAwBhL,KAAKgO,mBAAmB/H,gBAClDmF,UAAU,SAAAC,GACT,GAAIA,EAAKtF,WAAakD,EAAKlD,SACzB,GAAIsF,EAAKrF,OAAQ,KACTmI,EAAc,QAAQlF,EAAKgF,WAAU,MAC3ChF,EAAK8E,SAASK,SAASnF,EAAK6E,WAAWO,cAAe,iBAAkBF,GACxElF,EAAK8E,SAASK,SAASnF,EAAK6E,WAAWO,cAAe,SAAUF,QAEhEjF,WAAW,WACJD,EAAK+E,mBAAmBlH,cAAcuE,EAAKtF,YAC9CkD,EAAK8E,SAASK,SAASnF,EAAK6E,WAAWO,cAAe,iBAAkB,QACxEpF,EAAK8E,SAASK,SAASnF,EAAK6E,WAAWO,cAAe,SAAU,ULlCnC,QK6C3CR,EAAAjO,UAAA0N,YAAA,WACMtN,KAAKgL,uBACPhL,KAAKgL,sBAAsBuC,mCAvDhCe,EAAAA,UAAS3E,KAAA,CAAC,CAAE8D,SAAU,oEAPHc,EAAAA,kBAA8BC,EAAAA,iBAGzC/I,mCASNmI,EAAAA,wBASAA,EAAAA,SA4CHC,EAjEA,GCAAY,EAAA,WAQA,SAAAA,KA+BA,OAXSA,EAAAC,QAAP,SAAeC,GACb,MAAO,CACLC,SAAUH,EACVI,UAAW,CACT,CACEC,QAASvJ,EACTwJ,SAAUJ,0BA1BnBK,EAAAA,SAAQrF,KAAA,CAAC,CACRsF,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZ7E,EACAuD,GAEFuB,QAAS,CACP9E,EACAuD,OAqBJY,EAvCA,GCMaY,EAAoC,IAAI7J,EAAAA,eAAwC,kCCHhF8J,EAAmB,+BCiC9B,SAAAC,EAC0BC,EAC+B9J,EACvD+J,EACAzB,GAEA,GAAIwB,EACF,MAAM,IAAIhG,MAAM,wHAGd7D,EAAyC,CAC3CI,SAAUiI,EAAmBrG,mBAAmBhD,eAChDkB,gBAAgB,GAGdH,IACFC,EAAazG,EAAA,GAAQyG,EAAkBD,IAGzC+J,EAAOC,OACJtE,UAAU,SAAAuE,GACLA,aAAiBC,EAAAA,kBACfjK,EAAcE,eAChBmI,EAAmBzF,YAAY5C,EAAcI,SAAUuJ,GAEvDtB,EAAmBlF,sBAAsBnD,EAAcI,SAAUuJ,KAIjEK,aAAiBE,EAAAA,eAAiBF,aAAiBG,EAAAA,kBAAoBH,aAAiBI,EAAAA,mBACtFpK,EAAcE,eAChBmI,EAAmBhF,WAAWrD,EAAcI,SAAUuJ,GAEtDtB,EAAmB3E,qBAAqB1D,EAAcI,SAAUuJ,MAK5E,OA1DSC,EAAAb,QAAP,SAAesB,GACb,MAAO,CACLpB,SAAUW,EACVV,UAAW,CACT,CACEC,QAASO,EACTN,SAAUiB,0BAdnBhB,EAAAA,SAAQrF,KAAA,CAAC,+CA6BgC4F,EAAuBU,WAAA,CAAA,CAAAnG,KAA5DD,EAAAA,UAAQ,CAAAC,KAAIoG,EAAAA,8CACZrG,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMJ,KAAA,CAAC0F,YArCoDc,EAAAA,cAEnE1K,KAuET8J,KCpEaa,EAAkC,IAAI5K,EAAAA,eAAsC,gCCH5E6K,EAAiB,6BCoB5B,SAAAC,EAAiE5K,EACvDsI,GAAAhO,KAAAgO,mBAAAA,EAERhO,KAAKuQ,MAAQ,EACbvQ,KAAK2F,cAAgB,CACnBI,SAAU/F,KAAKgO,mBAAmBrG,mBAAmBhD,eACrDkB,gBAAgB,GAGdH,IACEA,EAAO8K,UACTxQ,KAAKwQ,QAAU9K,EAAO8K,QAAQvD,IAAI,SAAAwD,GAAO,OAAAA,EAAIC,iBAE3ChL,EAAOiL,gBACT3Q,KAAK2Q,cAAgBjL,EAAOiL,cAAc1D,IAAI,SAAA2D,GAAU,OAAA,IAAIC,OAAOD,EAAQ,QAE7E5Q,KAAK2F,cAAazG,EAAA,GAAQc,KAAK2F,cAAkBD,IAiDvD,OA7CE4K,EAAA1Q,UAAAkR,UAAA,SAAUC,EAAuBhK,GAAjC,IAAAkC,EAAAjJ,KACE,OAAIA,KAAKgR,UAAUD,EAAIN,KACd1J,EAAKkK,OAAOF,IAGrB/Q,KAAKuQ,QACDvQ,KAAK2F,cAAcE,eAChB7F,KAAKgO,mBAAmBlH,cAAc9G,KAAK2F,cAAcI,SAAUsK,IACtErQ,KAAKgO,mBAAmBzF,YAAYvI,KAAK2F,cAAcI,SAAUsK,GAG9DrQ,KAAKgO,mBAAmBhH,cAAchH,KAAK2F,cAAcI,SAAUsK,IACtErQ,KAAKgO,mBAAmBlF,sBAAsB9I,KAAK2F,cAAcI,SAAUsK,GAIxEtJ,EAAKkK,OAAOF,GAAK9F,KAAKiG,EAAAA,SAAS,WACpCjI,EAAKsH,QACc,IAAftH,EAAKsH,QACHtH,EAAKtD,cAAcE,eACrBoD,EAAK+E,mBAAmBhF,WAAWC,EAAKtD,cAAcI,SAAUsK,GAEhEpH,EAAK+E,mBAAmB3E,qBAAqBJ,EAAKtD,cAAcI,SAAUsK,SAM1EC,EAAA1Q,UAAAoR,UAAR,SAAkBP,GAChB,SAAIzQ,KAAKwQ,UAEmE,IAAtExQ,KAAKwQ,QAAQrD,UAAU,SAAAgE,GAAO,OAAAV,EAAIC,cAAc7D,WAAWsE,UAK7DnR,KAAK2Q,gBAE2D,IAA9D3Q,KAAK2Q,cAAcxD,UAAU,SAAAyD,GAAU,OAAAA,EAAOQ,KAAKX,2BAvE5D/G,EAAAA,kFAacG,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMJ,KAAA,CAACyG,YAlBzB3K,KAmFT6K,KCxFAe,EAAA,WAsBE,SAAAA,EAAoC7B,GAClC,GAAIA,EACF,MAAM,IAAIhG,MAAM,kHAoBtB,OAXS6H,EAAA3C,QAAP,SAAe4C,GACb,MAAO,CACL1C,SAAUyC,EACVxC,UAAW,CACT,CACEC,QAASsB,EACTrB,SAAUuC,0BAhCnBtC,EAAAA,SAAQrF,KAAA,CAAC,CACRkF,UAAW,CACT,CACEC,QAASyC,EAAAA,kBACTC,SAAUlB,EACVmB,OAAO,iDAUuCJ,EAAqBpB,WAAA,CAAA,CAAAnG,KAA1DD,EAAAA,UAAQ,CAAAC,KAAIoG,EAAAA,cAsB3BmB,EA5CA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Available spinner types\n */\nexport enum SPINNER {\n  ballScaleMultiple = 'ball-scale-multiple',\n  ballSpin = 'ball-spin',\n  ballSpinClockwise = 'ball-spin-clockwise',\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\n  chasingDots = 'chasing-dots',\n  circle = 'circle',\n  cubeGrid = 'cube-grid',\n  doubleBounce = 'double-bounce',\n  fadingCircle = 'fading-circle',\n  foldingCube = 'folding-cube',\n  pulse = 'pulse',\n  rectangleBounce = 'rectangle-bounce',\n  rectangleBounceParty = 'rectangle-bounce-party',\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\n  rotatingPlane = 'rotating-plane',\n  squareJellyBox = 'square-jelly-box',\n  squareLoader = 'square-loader',\n  threeBounce = 'three-bounce',\n  threeStrings = 'three-strings',\n  wanderingCubes = 'wandering-cubes',\n}\n\n/**\n * Available postions\n */\nexport enum POSITION {\n  bottomCenter = 'bottom-center',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  centerCenter = 'center-center',\n  centerLeft = 'center-left',\n  centerRight = 'center-right',\n  topCenter = 'top-center',\n  topLeft = 'top-left',\n  topRight = 'top-right'\n}\n\n/**\n * Progress bar directions\n */\nexport enum PB_DIRECTION {\n  leftToRight = 'ltr',\n  rightToLeft = 'rtl'\n}\n","import { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\n\n/**\n * The default value of task id\n */\nexport const DEFAULT_TASK_ID = 'default';\n\n/**\n * The default value of loader id\n */\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\n\nexport const CLOSING_TIME = 1100;\n\nexport const WAITING_FOR_OVERLAY_DISAPPEAR = 500;\n\n/**\n * The configuration of spinners\n */\nexport const SPINNER_CONFIG = {\n  'ball-scale-multiple': {\n    divs: 3,\n    class: 'sk-ball-scale-multiple'\n  },\n  'ball-spin': {\n    divs: 8,\n    class: 'sk-ball-spin'\n  },\n  'ball-spin-clockwise': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise'\n  },\n  'ball-spin-clockwise-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise-fade-rotating'\n  },\n  'ball-spin-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-fade-rotating'\n  },\n  'chasing-dots': {\n    divs: 2,\n    class: 'sk-chasing-dots'\n  },\n  'circle': {\n    divs: 12,\n    class: 'sk-circle'\n  },\n  'cube-grid': {\n    divs: 9,\n    class: 'sk-cube-grid'\n  },\n  'double-bounce': {\n    divs: 2,\n    class: 'sk-double-bounce'\n  },\n  'fading-circle': {\n    divs: 12,\n    class: 'sk-fading-circle'\n  },\n  'folding-cube': {\n    divs: 4,\n    class: 'sk-folding-cube'\n  },\n  'pulse':  {\n    divs: 1,\n    class: 'sk-pulse'\n  },\n  'rectangle-bounce': {\n    divs: 5,\n    class: 'sk-rectangle-bounce'\n  },\n  'rectangle-bounce-party': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-party'\n  },\n  'rectangle-bounce-pulse-out': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out'\n  },\n  'rectangle-bounce-pulse-out-rapid': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\n  },\n  'rotating-plane': {\n    divs: 1,\n    class: 'sk-rotating-plane'\n  },\n  'square-jelly-box': {\n    divs: 2,\n    class: 'sk-square-jelly-box'\n  },\n  'square-loader': {\n    divs: 1,\n    class: 'sk-square-loader'\n  },\n  'three-bounce': {\n    divs: 3,\n    class: 'sk-three-bounce'\n  },\n  'three-strings': {\n    divs: 3,\n    class: 'sk-three-strings'\n  },\n  'wandering-cubes': {\n    divs: 2,\n    class: 'sk-wandering-cubes'\n  },\n};\n\n/**\n * The default configuration of ngx-ui-loader\n */\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\n  bgsColor: '#00ACC1',\n  bgsOpacity: 0.5,\n  bgsPosition: POSITION.bottomRight,\n  bgsSize: 60,\n  bgsType: SPINNER.ballSpinClockwise,\n  blur: 5,\n  fgsColor: '#00ACC1',\n  fgsPosition: POSITION.centerCenter,\n  fgsSize: 60,\n  fgsType: SPINNER.ballSpinClockwise,\n  gap: 24,\n  logoPosition: POSITION.centerCenter,\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: '#00ACC1',\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: POSITION.centerCenter,\n  threshold: 500\n};\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\n\n/**\n * Injection token for ngx-ui-loader configuration\n */\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { CLOSING_TIME, DEFAULT_TASK_ID, DEFAULT_CONFIG, WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { Loaders, Loader, ShowEvent, Task } from './ngx-ui-loader.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxUiLoaderService {\n\n  // Public properties\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  backgroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  foregroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  showBackground$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  showForeground$: Observable<ShowEvent>;\n\n  // Private properties\n  private bgClosing: BehaviorSubject<ShowEvent>;\n  private defaultConfig: NgxUiLoaderConfig;\n  private fgClosing: BehaviorSubject<ShowEvent>;\n  private loaders: Loaders;\n  private showBackground: BehaviorSubject<ShowEvent>;\n  private showForeground: BehaviorSubject<ShowEvent>;\n\n  /**\n   * Constructor\n   * @param config\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\n\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n\n    if (this.config) {\n      if (this.config.threshold && this.config.threshold <= 0) {\n        this.config.threshold = DEFAULT_CONFIG.threshold;\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\n    }\n\n    this.loaders = {};\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showForeground$ = this.showForeground.asObservable();\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showBackground$ = this.showBackground.asObservable();\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.foregroundClosing$ = this.fgClosing.asObservable();\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.backgroundClosing$ = this.bgClosing.asObservable();\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  initLoaderData(loaderId: string): void {\n    let isMaster = false;\n    if (loaderId === this.defaultConfig.masterLoaderId) {\n      this.throwErrorIfMasterLoaderExists(true);\n      isMaster = true;\n    } else { // not master loader\n      this.throwErrorIfLoaderExists(loaderId, true);\n    }\n    if (this.loaders[loaderId]) {\n      this.loaders[loaderId].isBound = true;\n      this.loaders[loaderId].isMaster = isMaster;\n      // emit showEvent after data loader is bound\n      if (this.hasForeground(loaderId)) {\n        this.showForeground.next({ loaderId, isShow: true });\n      } else {\n        if (this.hasBackground(loaderId)) {\n          this.showBackground.next({ loaderId, isShow: true });\n        }\n      }\n    } else {\n      this.createLoaderData(loaderId, isMaster, true);\n    }\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  updateLoaderId(loaderId: string, newLoaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n    if (this.loaders[loaderId].loaderId === this.defaultConfig.masterLoaderId) {\n      console.warn(`[ngx-ui-loader] - Cannot change loaderId of master loader. The current ` +\n        `master's loaderId is \"${this.defaultConfig.masterLoaderId}\". If you really want to ` +\n        `change it, please use NgxUiLoaderModule.forRoot() method.`);\n      return;\n    }\n    if (newLoaderId !== loaderId) {\n      this.throwErrorIfLoaderExists(newLoaderId, true);\n      this.loaders[newLoaderId] = {\n        loaderId: newLoaderId,\n        background: { ...this.loaders[loaderId].background },\n        foreground: { ...this.loaders[loaderId].foreground },\n        isMaster: false,\n        isBound: this.loaders[loaderId].isBound\n      };\n      delete this.loaders[loaderId];\n    }\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  destroyLoaderData(loaderId: string): void {\n    this.stopLoaderAll(loaderId);\n    delete this.loaders[loaderId];\n  }\n\n  /**\n   * Get default loader configuration\n   * @returns default configuration object\n   */\n  getDefaultConfig(): NgxUiLoaderConfig {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * Get all the loaders\n   */\n  getLoaders(): Loaders {\n    return JSON.parse(JSON.stringify(this.loaders));\n  }\n\n  /**\n   * Get data of a specified loader. If loaderId is not provided, it will return data of master loader(if existed)\n   */\n  getLoader(loaderId?: string): Loader {\n    if (loaderId) {\n      this.throwErrorIfLoaderNotExist(loaderId);\n    } else {\n      this.throwErrorIfMasterLoaderNotExist();\n      loaderId = this.defaultConfig.masterLoaderId;\n    }\n    return JSON.parse(JSON.stringify(this.loaders[loaderId]));\n  }\n\n  /**\n   * @deprecated use getLoader() or getLoaders() instead. This will be removed in the version 8.x.x\n   * Return status of master loader\n   */\n  getStatus(): { waitingBackground: Task, waitingForeground: Task } {\n    this.throwErrorIfMasterLoaderNotExist();\n    return {\n      waitingBackground: this.loaders[this.defaultConfig.masterLoaderId].background,\n      waitingForeground: this.loaders[this.defaultConfig.masterLoaderId].foreground\n    };\n  }\n\n  /**\n   * Check whether the queue has a waiting foreground loader with the given `taskId`.\n   * If no `taskId` specified, it will check whether the queue has any waiting foreground loader.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasForeground(loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      if (taskId) {\n        return this.loaders[loaderId].foreground[taskId] ? true : false;\n      }\n      return Object.keys(this.loaders[loaderId].foreground).length > 0;\n    }\n    return false;\n  }\n\n  /**\n   * Check whether the queue has a waiting background loader with the given `taskId`.\n   * If no `taskId` specified, it will check whether the queue has any waiting background loader.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasBackground(loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      if (taskId) {\n        return this.loaders[loaderId].background[taskId] ? true : false;\n      }\n      return Object.keys(this.loaders[loaderId].background).length > 0;\n    }\n    return false;\n  }\n\n  /**\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.createLoaderData(loaderId, undefined, false);\n\n    const foregroundRunning = this.hasForeground(loaderId);\n    this.loaders[loaderId].foreground[taskId] = Date.now();\n\n    if (!this.loaders[loaderId].isBound) {\n      return;\n    }\n\n    if (!foregroundRunning) {\n      if (this.hasBackground(loaderId)) {\n        this.backgroundCloseout(loaderId);\n        this.showBackground.next({ loaderId, isShow: false });\n      }\n      this.showForeground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the foreground loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\n   * NOTE: Really this function just wraps startLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  start(taskId: string = DEFAULT_TASK_ID): void {\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.createLoaderData(loaderId, undefined, false);\n\n    this.loaders[loaderId].background[taskId] = Date.now();\n\n    if (!this.loaders[loaderId].isBound) {\n      return;\n    }\n\n    if (!this.hasForeground(loaderId)) {\n      this.showBackground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the background loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\n   * NOTE: Really this function just wraps startBackgroundLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startBackground(taskId: string = DEFAULT_TASK_ID): void {\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    // Update loader data {{{\n    const now = Date.now();\n    if (this.hasForeground(loaderId, taskId)) {\n      if (this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold > now) {\n        setTimeout(() => {\n          this.stopLoader(loaderId, taskId);\n        }, this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold - now);\n        return;\n      }\n      delete this.loaders[loaderId].foreground[taskId];\n    } else {\n      return;\n    }\n    // }}}\n\n    // Emit ShowEvents to update view {{{\n    if (!this.hasForeground(loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n      if (this.hasBackground(loaderId)) {\n        setTimeout(() => {\n          if (this.hasBackground(loaderId)) { // still have background tasks\n            this.showBackground.next({ loaderId, isShow: true });\n          }\n        }, WAITING_FOR_OVERLAY_DISAPPEAR);\n      }\n    }\n    // }}}\n  }\n\n  /**\n   * Stop a foreground loading of master loader with specific `taskId`\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stop(taskId: string = DEFAULT_TASK_ID): void {\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    // Update loader data {{{\n    const now = Date.now();\n    if (this.hasBackground(loaderId, taskId)) {\n      if (this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold > now) {\n        setTimeout(() => {\n          this.stopBackgroundLoader(loaderId, taskId);\n        }, this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold - now);\n        return;\n      }\n      delete this.loaders[loaderId].background[taskId];\n    } else {\n      return;\n    }\n    // }}}\n\n    // Emit ShowEvents to update view {{{\n    if (!this.hasForeground(loaderId) && !this.hasBackground(loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    // }}}\n  }\n\n  /**\n   * Stop a background loading of master loader with specific taskId\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopBackground(taskId: string = DEFAULT_TASK_ID): void {\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop all the background and foreground loadings of loader having `loaderId`\n   * @param loaderId the loader Id\n   */\n  stopLoaderAll(loaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    if (this.hasForeground(loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n    } else if (this.hasBackground(loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.loaders[loaderId].foreground = {};\n    this.loaders[loaderId].background = {};\n  }\n\n  /**\n   * Stop all the background and foreground loadings of master loader\n   */\n  stopAll(): void {\n    this.stopLoaderAll(this.defaultConfig.masterLoaderId);\n  }\n\n  /**\n   * Create loader data if it does not exist\n   * @param loaderId\n   * @param isMaster\n   * @param isBound\n   * @docs-private\n   */\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\n    if (!this.loaders[loaderId]) {\n      this.loaders[loaderId] = {\n        loaderId,\n        foreground: {},\n        background: {},\n        isMaster,\n        isBound\n      };\n    }\n  }\n\n  /**\n   * Throw error if the loaderId does not exist.\n   * @docs-private\n   */\n  private throwErrorIfLoaderNotExist(loaderId: string): void {\n    if (!this.loaders[loaderId]) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n    }\n  }\n\n  /**\n   * Throw error if the loaderId has already existed.\n   * @docs-private\n   */\n  private throwErrorIfLoaderExists(loaderId: string, useIsBoundProp?: boolean): void {\n    if (this.loaders[loaderId] && (this.loaders[loaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated. Please choose another one!`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader has already existed.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderExists(useIsBoundProp?: boolean): void {\n    if (this.loaders[this.defaultConfig.masterLoaderId] && (this.loaders[this.defaultConfig.masterLoaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - The master loader has already existed. `\n        + `The app should have only one master loader and it should be placed in the root app template`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader does not exist.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderNotExist(): void {\n    if (!this.loaders[this.defaultConfig.masterLoaderId]) {\n      throw new Error(`[ngx-ui-loader] - The master loader does not exist.`);\n    }\n  }\n\n  /**\n   * Manage to close foreground loading\n   * @param loaderId the loader id\n   */\n  private foregroundCloseout(loaderId: string): void {\n    this.fgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.fgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n\n  /**\n   * Manage to close background loading\n   * @param loaderId the loader id\n   */\n  private backgroundCloseout(loaderId: string): void {\n    this.bgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.bgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n}\n","/**\n * Coerce a value (string) to a number\n * @param value\n * @param fallbackValue\n */\nexport function coerceNumber(value, fallbackValue): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, SimpleChange, OnDestroy } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { DirectionType, PositionType, SpinnerType } from './ngx-ui-loader.types';\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\nimport { SPINNER_CONFIG } from './ngx-ui-loader.contants';\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\nimport { coerceNumber } from './coercion';\n\n@Component({\n  selector: 'ngx-ui-loader',\n  templateUrl: './ngx-ui-loader.component.html',\n  styleUrls: ['./ngx-ui-loader.component.scss']\n})\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\n\n  @Input() bgsColor: string;\n  @Input() bgsOpacity: number;\n  @Input() bgsPosition: PositionType;\n  @Input() bgsSize: number;\n  @Input() bgsType: SpinnerType;\n  @Input() fgsColor: string;\n  @Input() fgsPosition: PositionType;\n  @Input() fgsSize: number;\n  @Input() fgsType: SpinnerType;\n  @Input() gap: number;\n  @Input() loaderId: string;\n  @Input() logoPosition: PositionType;\n  @Input() logoSize: number;\n  @Input() logoUrl: string;\n  @Input() overlayBorderRadius: string;\n  @Input() overlayColor: string;\n  @Input() pbColor: string;\n  @Input() pbDirection: DirectionType;\n  @Input() pbThickness: number;\n  @Input() hasProgressBar: boolean;\n  @Input() text: string;\n  @Input() textColor: string;\n  @Input() textPosition: PositionType;\n\n  fgDivs: number[];\n  fgSpinnerClass: string;\n  bgDivs: number[];\n  bgSpinnerClass: string;\n  showForeground: boolean;\n  showBackground: boolean;\n  foregroundClosing: boolean;\n  backgroundClosing: boolean;\n\n  trustedLogoUrl: SafeResourceUrl;\n  logoTop: SafeStyle;\n  spinnerTop: SafeStyle;\n  textTop: SafeStyle;\n\n  showForegroundWatcher: Subscription;\n  showBackgroundWatcher: Subscription;\n  foregroundClosingWatcher: Subscription;\n  backgroundClosingWatcher: Subscription;\n\n  defaultConfig: NgxUiLoaderConfig;\n  initialized: boolean;\n\n  /**\n   * Constructor\n   * @param domSanitizer\n   * @param ngxService\n   */\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private ngxService: NgxUiLoaderService) {\n\n    this.initialized = false;\n    this.defaultConfig = this.ngxService.getDefaultConfig();\n\n    this.bgsColor = this.defaultConfig.bgsColor;\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\n    this.bgsPosition = this.defaultConfig.bgsPosition;\n    this.bgsSize = this.defaultConfig.bgsSize;\n    this.bgsType = this.defaultConfig.bgsType;\n    this.fgsColor = this.defaultConfig.fgsColor;\n    this.fgsPosition = this.defaultConfig.fgsPosition;\n    this.fgsSize = this.defaultConfig.fgsSize;\n    this.fgsType = this.defaultConfig.fgsType;\n    this.gap = this.defaultConfig.gap;\n    this.loaderId = this.defaultConfig.masterLoaderId;\n    this.logoPosition = this.defaultConfig.logoPosition;\n    this.logoSize = this.defaultConfig.logoSize;\n    this.logoUrl = this.defaultConfig.logoUrl;\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\n    this.overlayColor = this.defaultConfig.overlayColor;\n    this.pbColor = this.defaultConfig.pbColor;\n    this.pbDirection = this.defaultConfig.pbDirection;\n    this.pbThickness = this.defaultConfig.pbThickness;\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\n    this.text = this.defaultConfig.text;\n    this.textColor = this.defaultConfig.textColor;\n    this.textPosition = this.defaultConfig.textPosition;\n  }\n\n  /**\n   * On init event\n   */\n  ngOnInit() {\n    this.initializeSpinners();\n    this.ngxService.initLoaderData(this.loaderId);\n    this.determinePositions();\n\n    this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\n\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n\n    this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\n\n    this.showForegroundWatcher = this.ngxService.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showForeground = data.isShow;\n      });\n\n    this.showBackgroundWatcher = this.ngxService.showBackground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showBackground = data.isShow;\n      });\n\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.foregroundClosing = data.isShow;\n      });\n\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.backgroundClosing = data.isShow;\n      });\n    this.initialized = true;\n  }\n\n  /**\n   * On changes event\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.initialized) {\n      return;\n    }\n\n    const bgsTypeChange: SimpleChange = changes.bgsType;\n    const bgsPositionChange: SimpleChange = changes.bgsPosition;\n    const fgsTypeChange: SimpleChange = changes.fgsType;\n    const loaderIdChange: SimpleChange = changes.loaderId;\n    const logoUrlChange: SimpleChange = changes.logoUrl;\n    const pbDirectionChange: SimpleChange = changes.pbDirection;\n\n    if (fgsTypeChange || bgsTypeChange) {\n      this.initializeSpinners();\n    }\n\n    if (loaderIdChange) {\n      this.ngxService.updateLoaderId(loaderIdChange.previousValue, this.loaderId);\n    }\n\n    this.determinePositions();\n\n    if (bgsPositionChange) {\n      this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\n    }\n\n    if (logoUrlChange) {\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n    }\n\n    if (pbDirectionChange) {\n      this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\n    }\n  }\n\n  /**\n   * Initialize spinners\n   */\n  private initializeSpinners(): void {\n    this.fgsType = <SpinnerType>this.validate('fgsType', this.fgsType, SPINNER, this.defaultConfig.fgsType);\n    this.bgsType = <SpinnerType>this.validate('bgsType', this.bgsType, SPINNER, this.defaultConfig.bgsType);\n\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\n  }\n\n  /**\n   * Determine the positions of spinner, logo and text\n   */\n  private determinePositions(): void {\n    this.fgsPosition = <PositionType>this.validate('fgsPosition', this.fgsPosition, POSITION, this.defaultConfig.fgsPosition);\n    this.logoPosition = <PositionType>this.validate('logoPosition', this.logoPosition, POSITION, this.defaultConfig.logoPosition);\n    this.textPosition = <PositionType>this.validate('textPosition', this.textPosition, POSITION, this.defaultConfig.textPosition);\n    this.gap = coerceNumber(this.gap, this.defaultConfig.gap);\n\n    this.logoTop = 'initial';\n    this.spinnerTop = 'initial';\n    this.textTop = 'initial';\n    const textSize = 24;\n\n    if (this.logoPosition.startsWith('center')) {\n      this.logoTop = '50%';\n    } else if (this.logoPosition.startsWith('top')) {\n      this.logoTop = '30px';\n    }\n\n    if (this.fgsPosition.startsWith('center')) {\n      this.spinnerTop = '50%';\n    } else if (this.fgsPosition.startsWith('top')) {\n      this.spinnerTop = '30px';\n    }\n\n    if (this.textPosition.startsWith('center')) {\n      this.textTop = '50%';\n    } else if (this.textPosition.startsWith('top')) {\n      this.textTop = '30px';\n    }\n\n    if (this.fgsPosition === POSITION.centerCenter) {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\n        if (this.text && this.textPosition === POSITION.centerCenter) { // logo, spinner and text\n          this.logoTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`);\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\n          this.textTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`);\n        } else { // logo and spinner\n          this.logoTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n        }\n      } else {\n        if (this.text && this.textPosition === POSITION.centerCenter) { // spinner and text\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n          this.textTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\n        }\n      }\n    } else {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter\n        && this.text && this.textPosition === POSITION.centerCenter) { // logo and text\n        this.logoTop = this.domSanitizer\n          .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n        this.textTop = this.domSanitizer\n          .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n      }\n    }\n  }\n\n  private validate(inputName: string, value: string, validTypeObj: {}, fallbackValue: string): string {\n    if (Object.keys(validTypeObj).map(k => validTypeObj[k]).findIndex(v => v === value) === -1) {\n      console.error(`[ngx-ui-loader] - ${inputName} (\"${value}\") is invalid. `\n        + `Default value \"${fallbackValue}\" is used.`);\n      return fallbackValue;\n    }\n    return value;\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    this.ngxService.destroyLoaderData(this.loaderId);\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n    if (this.showBackgroundWatcher) {\n      this.showBackgroundWatcher.unsubscribe();\n    }\n    if (this.foregroundClosingWatcher) {\n      this.foregroundClosingWatcher.unsubscribe();\n    }\n    if (this.backgroundClosingWatcher) {\n      this.backgroundClosingWatcher.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { coerceNumber } from './coercion';\nimport { WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\n\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\n\n  private blurNumber: number;\n\n  @Input()\n  get blur(): number {\n    return this.blurNumber;\n  }\n\n  set blur(value: number) {\n    this.blurNumber = coerceNumber(value, this.ngxUiLoaderService.getDefaultConfig().blur);\n  }\n\n  @Input() loaderId: string;\n\n  showForegroundWatcher: Subscription;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngxUiLoaderService: NgxUiLoaderService\n  ) {\n    this.blurNumber = this.ngxUiLoaderService.getDefaultConfig().blur;\n    this.loaderId = this.ngxUiLoaderService.getDefaultConfig().masterLoaderId;\n  }\n\n  /**\n   * On Init event\n   */\n  ngOnInit() {\n    this.showForegroundWatcher = this.ngxUiLoaderService.showForeground$\n      .subscribe(data => {\n        if (data.loaderId === this.loaderId) {\n          if (data.isShow) {\n            const filterValue = `blur(${this.blurNumber}px)`;\n            this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\n          } else {\n            setTimeout(() => {\n              if (!this.ngxUiLoaderService.hasForeground(data.loaderId)) {\n                this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\n                this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\n              }\n            }, WAITING_FOR_OVERLAY_DISAPPEAR);\n          }\n        }\n      });\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    NgxUiLoaderComponent,\n    NgxUiLoaderBlurredDirective,\n  ],\n  exports: [\n    NgxUiLoaderComponent,\n    NgxUiLoaderBlurredDirective,\n  ]\n})\nexport class NgxUiLoaderModule {\n\n  /**\n   * forRoot\n   * @param ngxUiLoaderConfig\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\n          useValue: ngxUiLoaderConfig\n        }\n      ]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\n\n/**\n * Injection token for ngx-ui-loader-router configuration\n */\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\n","/**\n * Router loader id\n */\nexport const ROUTER_LOADER_ID = '$_router_loader';\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\nimport { ROUTER_LOADER_ID } from './ngx-ui-loader-router.constants';\n\n@NgModule({})\nexport class NgxUiLoaderRouterModule {\n\n  /**\n   * forRoot\n   * @param routerConfig Configuration\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderRouterModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\n          useValue: routerConfig\n        }\n      ]\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param parentModule\n   * @param config\n   * @param router\n   * @param ngxUiLoaderService\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) config: NgxUiLoaderRouterConfig,\n    router: Router,\n    ngxUiLoaderService: NgxUiLoaderService) {\n\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n\n    let defaultConfig: NgxUiLoaderRouterConfig = {\n      loaderId: ngxUiLoaderService.getDefaultConfig().masterLoaderId,\n      showForeground: true\n    };\n\n    if (config) {\n      defaultConfig = { ...defaultConfig, ...config };\n    }\n\n    router.events\n      .subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (defaultConfig.showForeground) {\n            ngxUiLoaderService.startLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          } else {\n            ngxUiLoaderService.startBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          }\n        }\n\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n          if (defaultConfig.showForeground) {\n            ngxUiLoaderService.stopLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          } else {\n            ngxUiLoaderService.stopBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          }\n        }\n      });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\n\n/**\n * Injection token for ngx-ui-loader-http configuration\n */\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\n","/**\n * Http loader id\n */\nexport const HTTP_LOADER_ID = '$_http-loader';\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\nimport { HTTP_LOADER_ID } from './ngx-ui-loader-http.constants';\n\n@Injectable()\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\n\n  private count: number;\n  private defaultConfig: NgxUiLoaderHttpConfig;\n  private exclude: string[];\n  private excludeRegexp: RegExp[];\n\n  /**\n   * Constructor\n   * @param config\n   * @param ngxUiLoaderService\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) config: NgxUiLoaderHttpConfig,\n    private ngxUiLoaderService: NgxUiLoaderService) {\n\n    this.count = 0;\n    this.defaultConfig = {\n      loaderId: this.ngxUiLoaderService.getDefaultConfig().masterLoaderId,\n      showForeground: false\n    };\n\n    if (config) {\n      if (config.exclude) {\n        this.exclude = config.exclude.map(url => url.toLowerCase());\n      }\n      if (config.excludeRegexp) {\n        this.excludeRegexp = config.excludeRegexp.map(regexp => new RegExp(regexp, 'i'));\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...config };\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.isIgnored(req.url)) {\n      return next.handle(req);\n    }\n\n    this.count++;\n    if (this.defaultConfig.showForeground) {\n      if (!this.ngxUiLoaderService.hasForeground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\n        this.ngxUiLoaderService.startLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n      }\n    } else {\n      if (!this.ngxUiLoaderService.hasBackground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\n        this.ngxUiLoaderService.startBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n      }\n    }\n\n    return next.handle(req).pipe(finalize(() => {\n      this.count--;\n      if (this.count === 0) {\n        if (this.defaultConfig.showForeground) {\n          this.ngxUiLoaderService.stopLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n        } else {\n          this.ngxUiLoaderService.stopBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n        }\n      }\n    }));\n  }\n\n  private isIgnored(url: string): boolean {\n    if (this.exclude) {\n      // do not show the loader for api urls in the `exclude` list\n      if (this.exclude.findIndex(str => url.toLowerCase().startsWith(str)) !== -1) {\n        return true;\n      }\n    }\n\n    if (this.excludeRegexp) {\n      // do not show the loader for api urls which matches regexps in the `excludeRegexp` list\n      if (this.excludeRegexp.findIndex(regexp => regexp.test(url)) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgxUiLoaderHttpInterceptor,\n      multi: true\n    }\n  ],\n})\nexport class NgxUiLoaderHttpModule {\n\n  /**\n   * Constructor\n   * @param parentModule optional\n   */\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n  }\n\n  /**\n   * forRoot\n   * @param httpConfig Configuration\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderHttpModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\n          useValue: httpConfig\n        }\n      ]\n    };\n  }\n}\n"]}